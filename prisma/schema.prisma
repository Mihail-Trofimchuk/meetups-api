// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserMeetup {
  user     User   @relation("Participants", fields: [userId], references: [id], onDelete: Cascade)
  userId   Int    @map("user_id")
  meetup   Meetup @relation(fields: [meetupId], references: [id], onDelete: Cascade)
  meetupId Int    @map("meetup_id")

  @@id([userId, meetupId])
  @@map("user_meetup")
}

// Only local storage use
// model LocalFile {
//   id       Int    @id @default(autoincrement())
//   user     User?
//   fileName String @map("file_name")
//   path     String
//   mimeType String @map("mime_type")

//   @@map("local_file")
// }

model User {
  id                Int          @id @default(autoincrement())
  email             String       @unique
  displayName       String?      @map("display_name")
  passwordHash      String?      @map("password_hash")
  role              Role         @default(PARTICIPANT)
  // Only local storage use
  // avatar            LocalFile?   @relation(fields: [avatarId], references: [id], onDelete: Cascade)
  // avatarId          Int?         @unique @map("avatar_id")
  //
  avatarGoogleCloud String?      @map("avatar_google_cloud")
  isEmailConfirmed  Boolean      @default(false) @map("is_email_confirmed")
  meetup            UserMeetup[] @relation("Participants")
  organizedMeetings Meetup[]     @relation("Organizer")

  @@map("user")
}

model Meetup {
  id           Int          @id @default(autoincrement())
  title        String       @unique
  description  String
  tags         String[]
  meetingTime  DateTime     @map("meeting_time")
  latitude     Decimal
  longitude    Decimal
  participants UserMeetup[]
  createdBy    User?        @relation("Organizer", fields: [createdById], references: [id], onDelete: Cascade)
  createdById  Int?         @map("created_by_id")

  @@map("meetup")
}

enum Role {
  ADMIN
  PARTICIPANT
  ORGANIZER
}
